var documenterSearchIndex = {"docs":
[{"location":"copulas/#Modelling-dependencies-with-copulas","page":"Dependence","title":"Modelling dependencies with copulas","text":"","category":"section"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Any possible multivariate dependence can be encoded in a copula. Copulas, sometimes called dependency functions, are a joint cdf with standard uniform marginals, and are a way to model dependency independently of marginal distributions. ","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"The supported copulas are:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"π: independence\nM: perfect dependence and the upper Frechét bound\nW: opposite dependence and the lower Frechét bound\nGaussian: family with correlation coefficient r (-1 for W, 0 for π, 1 for M)\nFrank: family with parameter s (0 for W, 1 for π, Inf for M)\nClayton: family with parameter t (-1 for W, 0 for π, Inf for M)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A copula can be created and plotted in the following way:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C = GauCopula(0.7)\n Copula ~ Gau(r=0.7)\n\njulia> using PyPlot\njulia> plot(C)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Gaussian copula with a correlation of 0.7\")","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A copula C is the function C01^d rightarrow 01, where d is the dimension of the copula. Only bivariate copulas are considered so far in ProbabilityBoundsAnalysis.jl. A copula can be evaluated and sampled in the following way:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C(0.5,0.5)\n [0.370898, 0.375924]\n\njulia> C([0.2,0.6],[0.3,0.7])\n2×2 Array{Interval{Float64},2}:\n [0.140274, 0.144236]  [0.191086, 0.196042]\n [0.270231, 0.275108]  [0.524632, 0.53028]\n \njulia> samps = sample(C,10^4);","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Note that like distributions and p-boxes, in ProbabilityBoundsAnalysis.jl samples and evaluations of copulas are intervals. This also allows copulas to be imprecisely defined (set of dependencies). An imprecise copula can be created by giving the constructor and interval:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C = GauCopula(interval(-0.5,0.5))\n Imp Copula ~ Gaussian(r = [-0.5, 0.5])\n\njulia> C(0.5,0.5)\n [0.164165, 0.33585]\n\njulia> C([0.2,0.6],[0.3,0.7])\n2×2 Array{Interval{Float64},2}:\n [0.0162205, 0.116083]  [0.082187, 0.18411]\n [0.105729, 0.248291]   [0.350841, 0.495683]\n\njulia> plot(a)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Imprecise Gaussian copula with a correlation in [-0.5, 0.5]\")","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Given any marginal distributions F_X(x) and F_Y(y) and a copla C(  ), a joint distribution can be created: H(xy) = C(F_X(x) F_Y(y)).  In ProbabilityBoundsAnalysis.jl a joint distribution can be created by passing marginals to the copula. For example, a distribution with beta marginals and a gaussian copula:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C = GauCopula(0.7);\njulia> J = C(beta(4,2),beta(4,2))\nBivPbox ~ Gaussian( beta(mean = 0.66666, var = 0.031746), beta(mean = 0.66666, var = 0.031746); r = 0.7)\n\njulia> plot(J)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Bivariate Beta with gaussian copula with correlation of 0.7\")","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A joint distribution can also be sampled:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> Jsamps = sample(J,10^4)\njulia> scatter(Jsamps)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Scatter plot of samples of J\")","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Notice that samples are bivariate intervals, capturing the representation error of the marginals and the copula. This can be reduced by increasing the descritisation.","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A bivariate p-box (bounds on bivariate cdfs) can be created from two marginal p-boxes and an imprecise copula:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> a = b = beta(interval(3,5),interval(1,3))\nPbox: \t  ~ beta ( range=[0.0, 1.0], mean=[0.5, 0.83333], var=[0.019841, 0.0375])\n\njulia> C = GauCopula(interval(-0.5,0.5))\nImp Copula ~ Gaussian(r = [-0.5, 0.5])\n\njulia> J = C(a, b)\nBivPbox ~ Gaussian( beta(mean = [0.5, 0.833334], var = [0.0198412, 0.0375]), beta(mean = [0.5, 0.833334], var = [0.0198412, 0.0375]); r = [-0.5, 0.5])\n\njulia> plot(J)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Plot of a bivariate p-box\")","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"If the copula is precise, but the marginals are p-boxes, then the bivariate p-box may also be sampled. This generates a correlated random set.","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> a = b = beta(interval(3,5),interval(1,3));\njulia> C = GauCopula(-0.7);\njulia> J = C(a, b);\njulia> samps = sample(J,10^3)\n1000×2 Array{Interval{Float64},2}:\n    [0.77936, 0.985591]   [0.146632, 0.495935]\n    [0.570252, 0.913177]  [0.559218, 0.907351]\n    [0.135267, 0.478177]  [0.785104, 0.986649]\n    [0.505333, 0.875713]  [0.592774, 0.924402]\n    [0.666583, 0.955155]  [0.260591, 0.65439]\n    [0.58992, 0.923029]   [0.718078, 0.971412]\n\n     ⋮                    \n    [0.748597, 0.979149]  [0.285952, 0.684256]\n    [0.105639, 0.431736]  [0.83419, 0.993927]\n    [0.58992, 0.923029]   [0.273638, 0.669988]\n    [0.293819, 0.693145]  [0.48933, 0.865264]\n    [0.763288, 0.982391]  [0.260591, 0.65439]\n    [0.365677, 0.766742]  [0.646901, 0.947835]\n\njulia> scatter(samps)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: \"Samples of a bivariate p-box\")","category":"page"},{"location":"sets/#Comparisons-and-Set-based-operations","page":"Comparisons and set operations","title":"Comparisons and Set based operations","text":"","category":"section"},{"location":"sets/#Comparisons","page":"Comparisons and set operations","title":"Comparisons","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Comparisons (<, >, <=, >=, ==) between p-boxes, intervals and scalars can be performed. However unlike for comparisons between real numbers which yield Boolean values (true or false), comparisons with p-boxes generally yield interval probabilities, giving the uncertainty that the random variable characterised by a p-box meets the condition.","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"NOTE: unlike IntervalArithmetic.jl, comparisons in ProbabilityBoundsAnalysis.jl will generally give non-Boolean values (interval probabilities). This may cause crashes when evaluating control-flow (if-else) with uncertainty.","category":"page"},{"location":"sets/#Comparisons-of-p-boxes-and-scalars","page":"Comparisons and set operations","title":"Comparisons of p-boxes and scalars","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"For a p-box X and real number y, X <= y is the evaluation of y in the CDF of X:","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: )","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Similarly, X >= y is","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: compare1)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Example","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> X = uniform(0, 1)\njulia> X <= 0.7\n[0.695, 0.705001]\n\njulia> X >= 0.4\n[0.594999, 0.605]\n\njulia> X = normal(interval(-0.5, 0.5), interval(1, 1.5))\njulia> X >= 1\n[0.0649999, 0.37]","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Boolean values are returned if the condition is guaranteed","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> X = uniform(0, 1)\njulia> X <= 2\ntrue\n\njulia> X >= 2\nfalse","category":"page"},{"location":"sets/#Comparisons-of-p-boxes-and-intervals","page":"Comparisons and set operations","title":"Comparisons of p-boxes and intervals","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"A comparison between a p-box X and an interval Y can be evaluated as follows","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: )","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"where subtraction is evaluated with p-box arithmetic, and then the resulting p-box's CDF is evaluated at 0. I.e., Z = X - Y and then cdf(Z, 0.0). Similarly","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: ass)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Example","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> X = uniform(0, 1)\njulia> Y = interval(0.7, 2)\njulia> X <= Y\n[0.695, 1]\n\njulia> X >= Y\n[0, 0.305]\n\njulia> X <= interval(2, 3)\ntrue\n\njulia> X >= interval(2, 3)\nfalse","category":"page"},{"location":"sets/#Comparisons-between-p-boxes","page":"Comparisons and set operations","title":"Comparisons between p-boxes","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Comparison between two p-boxes X and Y are performed similarly to intervals","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: )","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"However, for arithmetic operation (subtraction) to be performed exactly, the dependence (copula) between X and Y must be known. The default is Frechet (unknown dependence). Therefore, even if we begin with precise p-boxes (distributions), comparisons will give interval probabilities. ","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Example","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> X = uniform(0, 1)\njulia> Y = uniform(0.5, 1.5)\njulia> X <= Y\n[0.5, 1]\n\njulia> X <= uniform(2, 3)\ntrue\n\njulia> X >= uniform(2, 3)\nfalse","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"The correlation (e.g. independence) can be specified when performing the comparison (which uses a gaussian copula as default)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> X = uniform(0, 1)\njulia> Y = uniform(0.5, 1.5)\njulia> <=(X,Y, corr = 0)\n[0.869999, 0.880001]\n\njulia> >=(X,Y, corr = 0)\n[0.119999, 0.130001]\n\njulia> <=(X,Y, corr = 1)\ntrue\n\njulia> <=(X,Y, corr = -1)\n[0.744999, 0.755001]\n\njulia> >=(X,Y, corr = 0.5)\n[0.04, 0.0550001]","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Notice that the dependence can greatly change the probability. For example <=(X,Y, corr = 1) gave true (probability 1).","category":"page"},{"location":"sets/#Set-based-operations","page":"Comparisons and set operations","title":"Set based operations","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Since p-boxes are a representation of sets of probabilities, set based operations (∩, ∪, ⊂, ⊆) are defined for p-boxes.","category":"page"},{"location":"sets/#Envelopes-(hull-or-union)-of-p-boxes,-intervals,-and-scalars","page":"Comparisons and set operations","title":"Envelopes (hull or union) of p-boxes, intervals, and scalars","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"Envelopes between p-boxes, intervals and scalars generally yield p-boxes. The following takes the envelope of a uniform and a gaussian","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> using ProbabilityBoundsAnalysis, PyPlot\njulia> a = uniform(0, 1)\njulia> b = normal(0, 1)\njulia> c = a ∪ b            # or env(a, b)\njulia> plot(c, fontsize = 22)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: \"envelope of a uniform and a gaussian\")","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"The following takes the envelope of an scalar and a gaussian","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> using ProbabilityBoundsAnalysis, PyPlot\njulia> a2 = 1.0\njulia> b2 = normal(0, 1)\njulia> c2 = a2 ∪ b2            # or env(a2, b2)\njulia> plot(c2, fontsize = 22)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: \"envelope of a scalar and a gaussian\")","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"The following takes the envelope of an interval and a gaussian","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> using ProbabilityBoundsAnalysis, PyPlot\njulia> a3 = interval(0, 1)\njulia> b3 = normal(0, 1)\njulia> c3 = a3 ∪ b3            # or env(a3, b3)\njulia> plot(c3, fontsize = 22)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"(Image: \"envelope of an interval and a gaussian\")","category":"page"},{"location":"sets/#Intersection-of-p-boxes,-intervals,-and-scalars","page":"Comparisons and set operations","title":"Intersection of p-boxes, intervals, and scalars","text":"","category":"section"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"If non-empty, set intersection can be performed between p-boxes. The following take the intersection between two normal shaped p-boxes N([0, 1.5], [1, 2]) ∩ N([1, 2], 1) -> N([1, 1.5],1)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"julia> using ProbabilityBoundsAnalysis, PyPlot, IntervalArithmetic\njulia> a = normal(0..1.5, 1..2)\njulia> b = normal(1..2, 1)\njulia> c = a ∩ b            # or imp(a, b)\njulia> plot(a, name = \"ab\", col = \"red\", fontsize = 22)\njulia> plot(b, name = \"ab\", col = \"blue\", fontsize = 22)\njulia> plot(c, fontsize = 22)","category":"page"},{"location":"sets/","page":"Comparisons and set operations","title":"Comparisons and set operations","text":"<img src=\"./plots/intersection1.png\" width=\"49.5%\"/>\n<img src=\"./plots/intersection2.png\" width=\"49.5%\"/>","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = ProbabilityBoundsAnalysis\nDocTestSetup = quote\n    using ProbabilityBoundsAnalysis\nend","category":"page"},{"location":"api/","page":"API","title":"API","text":"\npbox( x :: Array{Interval{T}, 1}, bounded = [true, true]) where T <: Real\npbox( x :: Array{T, 2}, bounded = [true, true]) where T <: Real\n\ncdf(s :: pbox, x :: Real)\ncdf(s :: pbox, x::Interval)\n\nmass(s :: pbox, lo :: Real, hi :: Real)\nmass(s :: pbox, x:: Interval)\n\nmakepbox(x...)\n\nmean(x::pbox)\n\nvar(x::pbox)\n\nstd(x::pbox)\n\nenv(x...)\n\nimp(x...)\n\nnormal(mean, std)\n\nuniform(min :: Interval, max :: Interval)\n\nbeta(α, β)\n\nlognormal(  μ, θ)\n\nKN(k, n)\n\ncut(x, p :: Real)\n\n","category":"page"},{"location":"api/#Distributions.cdf-Tuple{pbox, Real}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Real)\n\nReturns cdf value (interval) at x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.cdf-Tuple{pbox, Interval}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Interval)\n\nReturns interval bounds on cdf value in interval x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox, Real, Real}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, lo :: Real, hi :: Real)\n\nReturns bounds on probability mass in interval [lo, hi]\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox, Interval}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, x:: Interval)\n\nReturns bounds on probability mass in interval x\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.makepbox-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.makepbox","text":"makepbox(x...)\n\nReturns an array of pboxes from an array of inputs (eg an array of intervals or reals).\n\nExamples\n\njulia> s = makepbox(interval(0,1))\nPbox: \t  ~  ( range=[0.0, 1.0], mean=[0.0, 1.0], var=[0.0, 0.25])\n\njulia> array = [interval(0, 1), interval(0, 2), 3];\n\njulia> s = makepbox.(array)\n3-element Vector{pbox}:\n Pbox: \t  ~  ( range=[0.0, 1.0], mean=[0.0, 1.0], var=[0.0, 0.25])\n Pbox: \t  ~  ( range=[0.0, 2.0], mean=[0.0, 2.0], var=[0.0, 1.0])\n Pbox: \t  ~  ( range=3.0, mean=3.0, var=0.0)\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.mean-Tuple{pbox}","page":"API","title":"Statistics.mean","text":"mean( x :: pbox)\n\nGet interval mean of a pbox See also: var, std\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{pbox}","page":"API","title":"Statistics.var","text":"var( x :: pbox)\n\nGet interval variance of a pbox See also: std, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.std-Tuple{pbox}","page":"API","title":"Statistics.std","text":"std( x :: pbox)\n\nGet interval std of a pbox See also: var, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.normal-Tuple{Any, Any}","page":"API","title":"ProbabilityBoundsAnalysis.normal","text":"normal(mean :: Interval, std :: Interval)\n\nNormal shaped pbox. Parameters can be Real or Intervals.\n\nConstructors\n\nnormal\nN\ngaussian\n\nExamples\n\njulia> a = normal(interval(0, 1), interval(1,2))\nPbox: \t  ~ normal ( range=[-6.1805, 7.1805], mean=[0.0, 1.0], var=[1.0, 4.0])\n\nSee also: uniform, lognormal, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.beta-Tuple{Any, Any}","page":"API","title":"ProbabilityBoundsAnalysis.beta","text":"beta(α :: Interval, β :: Interval)\n\nBeta shaped pbox. Parameters can be Real or Intervals.\n\nExamples\n\njulia> a = beta(2,interval(3,4))\nPbox: \t  ~ beta ( range=[0.0, 1.0], mean=[0.33333, 0.4], var=[0.031746, 0.04])\n\nSee also: KN, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.lognormal-Tuple{Any, Any}","page":"API","title":"ProbabilityBoundsAnalysis.lognormal","text":"lognormal(μ :: Interval, std :: Interval)\n\nLognormal shaped pbox. Parameters can be Real or Intervals.\n\nSee also: KN, meanMinMax\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.KN-Tuple{Any, Any}","page":"API","title":"ProbabilityBoundsAnalysis.KN","text":"KN(k :: Interval, n :: Interval)\n\nk out of N confidence box (c-box), a pbox shaped confidence structure. Quantifies inferential uncertainty in binomial counts, where k successes were observed out of n trails. One sided or two sided confidence intervals may be drawn\n\nConstructors\n\nKN\nkn\n\nSee also: meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.cut-Tuple{Any, Real}","page":"API","title":"ProbabilityBoundsAnalysis.cut","text":"cut(x :: pbox, p :: Real)\n\nreturns a vertical cut of a pbox at cdf value p, for p ∈ [0, 1]\n\nConstructors\n\ncut(x :: pbox, p :: Real)\ncut(x :: pbox, p :: Interval)\n\nSee also: rand, cdf, mass\n\n\n\n\n\n","category":"method"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]\nModule = [\"ProbabilityBoundsAnalysis\"]","category":"page"},{"location":"pboxes/#Constructing-probability-boxes","page":"Constructing p-boxes","title":"Constructing probability boxes","text":"","category":"section"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"A probability distribution can be created by using it's shape and parameters:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> a = normal(0,1)\nPbox: \t  ~ normal ( range=[-3.090232,3.090232], mean=0.0, var=1.0)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"In ProbabilityBoundsAnalysis.jl probability distributions are p-boxes, but with equal bounds and precise moments.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"The IntervalArithmetic.jl package is used to create intervals:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> b = interval(0,1)\n[0, 1]","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"IntervalArithmetic.jl will work natively with ProbabilityBoundsAnalysis.jl, however an interval can be converted to a p-box in the following way:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> b = makepbox(interval(0,1))\nPbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"There are a number of ways that p-boxes can be created. For example they are the result of arithemtic between random variables with unknown dependence. They can also be defined by using a distributions shape but with interval parameters:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> c = normal(interval(0,1),1)\nPbox: \t  ~ normal ( range=[-3.09023,4.0902322], mean=[0.0,1.0], var=1.0)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"or by taking the envelope over a number of uncertain numbers:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> d = normal(-1,1); \njulia> e = normal(1, interval(1,2));\njulia> f = env(d,e)\nPbox: \t  ~ normal ( range=[-5.18046,7.1804646], mean=[-1.0,1.0], var=[1.0,4.0])","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"and may be plotted as follows:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> using PyPlot\njulia> plot(f)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"(Image: \"a probability box\")","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"In ProbabilityBoundsAnalysis.jl all plots of uncertain numbers are of their cdfs.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"Supported parametric distributions:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"#=\n\n|           |         |        |              |         |             |\n|:---------:|:-------:|:------:|:------------:|:-------:|:-----------:|\n|   normal  | uniform |  beta  |   betaPrime  | biweght |    Cauchy   |\n|    chi    |  chisq  | cosine | epanechnikov |  erlang | exponential |\n|   fDist   | frechet |  gamma |    ksdist    | laplace |     levy    |\n| lognormal |         |        |              |         |             |\n\nSupported distribution free p-boxes:\n\n|           |         |        |              |         |\n|:---------:|:-------:|:------:|:------------:|:-------:|\n|   meanVar  | meanMin |  meanMax  |   meanMinMax  | minMaxMeanVar|\n\n=#","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"normal\nuniform\nbeta\nbetaPrime\nbiweght \ncauchy\nchi\nchisq\ncosine\nepanechnikov \nerlang\nexponential","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"Supported distribution free p-boxes:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"meanVar\nmeanMin\nmeanMax\nmeanMinMax\nminMaxMeanVar","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"KN c-boxes also supported.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"All constructors support interval arguments.","category":"page"},{"location":"theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"TODO","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"However Probability bounds analysis and probability boxes are comprehensive","category":"page"},{"location":"theory/#Bibliography","page":"Theory","title":"Bibliography","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"For probability bound analysis:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, S., V. Kreinovich, L. Ginzburg, K. Sentz and D.S. Myers. 2003. Constructing probability boxes and Dempster-Shafer structures. Sandia National Laboratories, SAND2002-4015, Albuquerque, New Mexico\nFerson, S., and J. Siegrist. 2012. Verified computation with probabilities. Pages 95-122 in Uncertainty Quantification in Scientific Computing, edited by A. Dienstfrey and R.F. Boisvert, Springer, New York\nBeer, M., S. Ferson, and V. Kreinovich. 2013. Imprecise probabilities in engineering analyses. Mechanical Systems and Signal Processing 37: 429\nFerson, S., D.R.J. Moore, P. van der Brink, T.L. Estes, K. Gallagher, R. O’Connor and F. Verdonck. 2010. Bounding uncertainty analyses. Application of Uncertainty Analysis to Ecological Risks of Pesticides","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"For interval statistics:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, Scott, et al. \"Experimental uncertainty estimation and statistics for data having interval uncertainty.\" Sandia National Laboratories, Report SAND2007-0939 162 (2007)","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"For dependency modelling:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, S., R. Nelsen, J. Hajagos, D. Berleant, J. Zhang, W.T. Tucker, L. Ginzburg and W.L. Oberkampf. 2004. Dependence in Probabilistic Modeling, Dempster-Shafer Theory, and Probability Bounds Analysis. Sandia National Laboratories, SAND2004-3072, Albuquerque, NM\nNelsen, Roger B. An introduction to copulas. Springer Science & Business Media, 2007","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"TODO","category":"page"},{"location":"arithmetic/#Arithmetic","page":"Arithmetic","title":"Arithmetic","text":"","category":"section"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"# foo\n\n#=\n\nSupported dependent arithmetic between uncertain numbers:\n\n|                           |     independent    | dependency known   | dependency unknown | perfect/opposite     | partial information  |\n|:-------------------------:|:------------------:|:------------------:|:------------------:|:--------------------:|:--------------------:|\n| intervals                 | not known to exist |         solutions exist        |         yes        |  solutions exist |  solutions exist |\n| probability distributions |         yes        |         yes        |         yes        |          yes         |          yes        |\n| probability boxes         |         yes        |         yes        |         yes        |          yes         |          yes        |\n\n\n||independent|dependency known|dependency unknown|perfect/opposite|partial information|\n|---------------------------|:------------------:|--------------------|--------------------|----------------------|----------------------|\n|intervals|not known to exist|solutions exist|yes|solutions exist|solutions exist|\n|probability distributions|yes|yes|yes|yes|yes|\n|probability boxes|yes|yes|yes|yes|yes|\n\n=#\n","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Most of the fundamental binary operations can be performed between uncertain numbers of all types:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> a = normal(10,1); \njulia> b = uniform(1,2);\njulia> a + b\n Pbox: \t  ~  ( range=[7.9098, 15.09], mean=11.5, var=[0.38392, 2.1086])\n\njulia> a - b\n Pbox: \t  ~  ( range=[4.9098, 12.09], mean=8.5, var=[0.38392, 2.1086])\n\njulia> a * b\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=[12.194, 18.069], var=[0.6576, 32.544])\n\njulia> a / b\n Pbox: \t  ~  ( range=[3.4549, 13.09], mean=[5.6205, 8.3861], var=[0.13574, 7.6644])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"<img src=\"./plots/sumFrechet.png\" width=\"49.5%\"/>\n<img src=\"./plots/subFrechet.png\" width=\"49.5%\"/>\n<img src=\"./plots/prodFrechet.png\"width=\"49.5%\"/>\n<img src=\"./plots/divFrechet.png\" width=\"49.5%\"/>","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"By default all arithmetic operations in ProbabilityBoundsAnalysis.jl are Frechet operations, operations which consider all possible dependencies (copulas). Therefore we naturally get p-boxes even if we began with precise distributions. For independence:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> convIndep(a, b, op = +)\n Pbox: \t  ~  ( range=[7.9098, 15.09], mean=11.5, var=1.0833)\n\njulia> convIndep(a, b, op = -)\n Pbox: \t  ~  ( range=[4.9098, 12.09], mean=8.5, var=1.0833)\n\njulia> convIndep(a, b, op = *)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=15.0, var=[10.052, 11.538])\n\njulia> convIndep(a, b, op = /)\n Pbox: \t  ~  ( range=[3.4549, 13.09], mean=[6.919, 6.944], var=[2.3032, 2.6815])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"The resulting p-boxes are precise.","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"<img src=\"./plots/sumIndep.png\" width=\"49.5%\"/>\n<img src=\"./plots/subIndep.png\" width=\"49.5%\"/>\n<img src=\"./plots/prodIndep.png\"width=\"49.5%\"/>\n<img src=\"./plots/divIndep.png\" width=\"49.5%\"/>","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Perfect and opposite convolutions can also be performed:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> convPerfect(a, b, op = +)\n Pbox: \t  ~  ( range=[7.9098, 15.09], mean=[11.482, 11.518], var=[1.5807, 1.7096])\n\njulia> convPerfect(a, b, op = *)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=[15.234, 15.33], var=[18.661, 19.605])\n\njulia> convOpposite(a, b, op = +)\n Pbox: \t  ~  ( range=[8.9048, 14.095], mean=[11.482, 11.518], var=[0.47843, 0.55648])\n\njulia> convOpposite(a, b, op = *)\n Pbox: \t  ~  ( range=[12.162, 16.638], mean=[14.67, 14.766], var=[2.0885, 2.3469])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"<img src=\"./plots/sumPerfect.png\" width=\"49.5%\"/>\n<img src=\"./plots/prodPerfect.png\" width=\"49.5%\"/>\n<img src=\"./plots/sumOpposite.png\"width=\"49.5%\"/>\n<img src=\"./plots/prodOpposite.png\" width=\"49.5%\"/>","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Binary operations with a specified correlation coefficient may also be performed:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> conv(a, b, op = *, corr = -0.5)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=15.0, var=[5.5032, 7.9116])\n\njulia> conv(a, b, op = *, corr = 0.5)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=15.0, var=[12.985, 16.804])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"<img src=\"./plots/prodCor1.png\" width=\"49.5%\"/>\n<img src=\"./plots/prodCor2.png\" width=\"49.5%\"/>","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"This assumes that a and b follow a Gaussian Copula. You may however perform the operation with any copula by using the function","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> C1 = clayton(5)\njulia> convCorr(a, b, op = *, C = C1)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=[15.024, 15.473], var=[15.738, 19.714])\n\njulia> C2 = Frank(-2)\njulia> convCorr(a, b, op = *, C = C2)\n Pbox: \t  ~  ( range=[6.9098, 26.18], mean=15.0, var=[6.78, 9.5713])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"where C is a copula (see section on dependence modelling).","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"<img src=\"./plots/prodCop1.png\" width=\"49.5%\"/>\n<img src=\"./plots/prodCop2.png\" width=\"49.5%\"/>","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Note that:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"conv(a, b, op = op, corr = 0)               == convIndep(a, b, op = op)\nconv(a, b, op = op, corr = 1)               == convPerfect(a, b, op = op)\nconv(a, b, op = op, corr = -1)              == convOpposite(a, b, op = op)\nconv(a, b, op = op, corr = interval(-1,1))  == convFrechet(a, b, op = op)","category":"page"},{"location":"#ProbabilityBoundsAnalysis.jl","page":"Home","title":"ProbabilityBoundsAnalysis.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Probability bounds analysis in Julia, a package for performing arithmetic between uncertain numbers. ProbabilityBoundsAnalysis.jl computes guaranteed bounds on functions of random variables, given only partial information about their marginals and dependence. Considered to be a form of rigorous computing with random variables.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supported uncertain numbers: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"scalars\nprobability distributions\nintervals\nprobability boxes (p-boxes)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Two ways to install and use:","category":"page"},{"location":"","page":"Home","title":"Home","text":"1. From the julia package manager","category":"page"},{"location":"","page":"Home","title":"Home","text":"You may download the lastest release by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add ProbabilityBoundsAnalysis\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"or the latest version by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add ProbabilityBoundsAnalysis#master\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"2. Downloading the source code","category":"page"},{"location":"","page":"Home","title":"Home","text":"git clone https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\n\njulia> include(\"ProbabilityBoundsAnalysis.jl/src/ProbabilityBoundsAnalysis.jl\")\njulia> using Main.ProbabilityBoundsAnalysis","category":"page"},{"location":"#For-plotting","page":"Home","title":"For plotting","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PyPlot.jl is used for all of the plotting functionality, it is however not installed by default. If you wish to plot p-boxes, you will need to install and the specifically call PyPlot.","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add PyPlot","category":"page"},{"location":"","page":"Home","title":"Home","text":"Matplotlib needs to be installed on your computer. If it is not, it can be installed by","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia -e 'ENV[\"PYTHON\"]=\"\"; using Pkg; Pkg.add(\"Conda\"); using Conda; Conda.add(\"matplotlib\"); Pkg.add(\"PyCall\"); Pkg.build(\"PyCall\"); Pkg.add(\"PyPlot\");'","category":"page"},{"location":"","page":"Home","title":"Home","text":"To use","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using ProbabilityBoundsAnalysis, PyPlot\njulia> a = normal(0,1)\njulia> plot(a)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Community-Guidelines","page":"Home","title":"Community Guidelines","text":"","category":"section"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you like this package or find it useful, do consider contributing. Any improvements or suggestions for new features are welcome, either to the package or this documentation. If you wish to make a contribution, please     make a push changes to a branch with a descriptive name e.g,  agray-new_feature and make a pull request. Please write a description of your modifications/additions in the pull request.","category":"page"},{"location":"#Unit-testing","page":"Home","title":"Unit testing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you make a change to the code base, consider also writing a test. The tests can be found in test/runtests.jl, which are run in every push to a pull request using github's CI. If you wish to run the tests locally","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia --project --color=yes test/runtests.jl","category":"page"},{"location":"#Reporting-issues-and-seeking-support","page":"Home","title":"Reporting issues and seeking support","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Issues and bugs can be reported using the issues tab on the repository. Feel free to report any issues that you have. Questions about functionality, and new feature requests may also be communicated through issues.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Further support can be forwarded to ander.gray@ukaea.uk.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#related-packages:","page":"Home","title":"related packages:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pba.py: Python version of this software.\npba.r: R version of this software.\nRAMAS® RiskCalc: a commerical software for distribution-free risk analysis.\nIntervalArithmetic.jl: the interval arithmetic package used in this software.\nValidatedNumerics.jl: a suite of julia packages for rigorous computations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Financial support from the EPSRC iCase studentship award 15220067 is gratefully acknowledged. We also gratefully acknowledge funding from UKRI via the EPSRC and ESRC Centre for Doctoral Training in Risk and Uncertainty Quantification and Management in Complex Systems. This research is funded by the Engineering Physical Sciences Research Council (EPSRC) with grant no. EP/R006768/1, which is greatly acknowledged for its funding and support. This work has been carried out within the framework of the EUROfusion Consortium and has received funding from the Euratom research and training programme 2014-2018 and 2019-2020 under grant agreement No 633053. The views and opinions expressed herein do not necessarily reflect those of the European Commission.","category":"page"}]
}

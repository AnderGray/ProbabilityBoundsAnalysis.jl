var documenterSearchIndex = {"docs":
[{"location":"copulas/#Modelling-dependencies-with-copulas","page":"Dependence","title":"Modelling dependencies with copulas","text":"","category":"section"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Any possible multivariate dependence can be encoded in a copula. Copulas, sometimes called dependency functions, are a joint cdf with standard uniform marginals, and are a way to model dependency independently of marginal distributions. ","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"The supported copulas are:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"π: independence\nM: perfect dependence and the upper Frechét bound\nW: opposite dependence and the lower Frechét bound\nGaussian: family with correlation coefficient r (-1 for W, 0 for π, 1 for M)\nFrank: family with parameter s (0 for W, 1 for π, Inf for M)\nClayton: family with parameter t (-1 for W, 0 for π, Inf for M)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A copula can be created and plotted in the following way:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C = Gaussian(0.7)\nCopula ~ Gau(r=0.7)\n\njulia> plotCdf(a)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: alt text)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A copula C is the function C:[0,1]<sup>d</sup> &rarr;[0,1], where d is the dimension of the copula. Only bivariate copulas are considered so far in ProbabilityBoundsAnalysis.jl. A copula can be evaluated and sampled in the following way:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> C(0.5,0.5)\n0-dimensional Array{Float64,0}:\n0.37340834444668247\n\njulia> C([0.2,0.6],[0.3,0.7])\n2×2 Array{Float64,2}:\n 0.143315  0.194937\n 0.273398  0.52667 \n \njulia> samps = sample(C,10^6);","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"Given any marginal distributions F<sub>X</sub>(x) and F<sub>Y</sub>(y) and a copla C( : ), a joint distribution can be created: H(x,y) = C(F<sub>X</sub>(x),F<sub>Y</sub>(y)).  In ProbabilityBoundsAnalysis.jl a joint distribution can be created by passing marginals to the copula. For example, a distribution with beta marginals and a gaussian copula:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> J = C(Beta(4,2),Beta(4,2))\nJoint ~ Gau( r=0.7, Beta{Float64}(α=4.0, β=2.0), Beta{Float64}(α=4.0, β=2.0) )\n\njulia> plotDensity(J)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: alt text)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"A joint distribution can also be sampled:","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"julia> Jsamps = sample(J,10^6)\njulia> scatter(Jsamps)","category":"page"},{"location":"copulas/","page":"Dependence","title":"Dependence","text":"(Image: alt text)","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = ProbabilityBoundsAnalysis\nDocTestSetup = quote\n    using ProbabilityBoundsAnalysis\nend","category":"page"},{"location":"api/","page":"API","title":"API","text":"\npbox( x :: Array{Interval{T}, 1}, bounded = [true, true]) where T <: Real\npbox( x :: Array{T, 2}, bounded = [true, true]) where T <: Real\n\ncdf(s :: pbox, x :: Real)\ncdf(s :: pbox, x::Interval)\n\nmass(s :: pbox, lo :: Real, hi :: Real)\nmass(s :: pbox, x:: Interval)\n\nmakepbox(x...)\n\nmean(x::pbox)\n\nvar(x::pbox)\n\nstd(x::pbox)\n\nenv(x...)\n\nimp(x...)\n\nnormal(mean, std)\n\nuniform(min :: Interval, max :: Interval)\n\nbeta(α, β)\n\nlognormal(  μ, θ)\n\nKN(k, n)\n\ncut(x, p :: Real)\n\n","category":"page"},{"location":"api/#ProbabilityBoundsAnalysis.pbox-Union{Tuple{Array{Interval{T},1}}, Tuple{T}, Tuple{Array{Interval{T},1},Any}} where T<:Real","page":"API","title":"ProbabilityBoundsAnalysis.pbox","text":"pbox( x :: Array{Interval{T}, 1} ) where T <: Real\n\nConstructs a pbox from an array of intervals with equal mass. Left and right bounds are sorted to construct cdf bounds.\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.pbox-Union{Tuple{Array{T,2}}, Tuple{T}, Tuple{Array{T,2},Any}} where T<:Real","page":"API","title":"ProbabilityBoundsAnalysis.pbox","text":"pbox( x :: Array{T, 2} ) where T <: Real\n\nConstructs a pbox from a matrix of 2nd order samples [Nouter x Ninner]\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.cdf-Tuple{pbox,Real}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Real)\n\nReturns cdf value (interval) at x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.cdf-Tuple{pbox,Interval}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Interval)\n\nReturns interval bounds on cdf value in interval x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox,Real,Real}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, lo :: Real, hi :: Real)\n\nReturns bounds on probability mass in interval [lo, hi]\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox,Interval}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, x:: Interval)\n\nReturns bounds on probability mass in interval x\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.makepbox-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.makepbox","text":"makepbox(x...)\n\nReturns an array of pboxes from an array of inputs (eg an array of intervals or reals).\n\nExamples\n\njulia> s = makepbox(interval(0,1))\n Pbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])\n\njulia> ar = [interval(0, 1), interval(0, 2), 3];\njulia> s = makepbox.(ar)\n3-element Array{pbox,1}:\n Pbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])\n Pbox: \t  ~  ( range=[0.0,2.0], mean=[0.0,2.0], var=[0.0,1.0])\n Pbox: \t  ~  ( range=[-1.0,0.0], mean=[-1.0,0.0], var=[0.0,0.25])\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.mean-Tuple{pbox}","page":"API","title":"Statistics.mean","text":"mean( x :: pbox)\n\nGet interval mean of a pbox See also: var, std\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{pbox}","page":"API","title":"Statistics.var","text":"var( x :: pbox)\n\nGet interval variance of a pbox See also: std, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.std-Tuple{pbox}","page":"API","title":"Statistics.std","text":"std( x :: pbox)\n\nGet interval std of a pbox See also: var, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.env-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.env","text":"env(x :: pbox, y :: pbox, ...)\n\nEnvelope. Returns the union of pboxes. Any number of pboxes may be input\n\nExamples\n\njulia> a = U(0,1)\n\njulia> b = U(1,2)\n\njulia> c = env(a, b)\nPbox: \t  ~ uniform ( range=[0.0,2.0], mean=[0.5,1.5], var=0.08333333333333333)\n\nSee also: imp, makepbox\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.imp-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.imp","text":"imp(x :: pbox, y :: pbox)\n\nImprint. Returns the intersection of pboxes. Any number of pboxes may be input\n\nExamples\n\njulia> a = U(interval(0, 1), 2)\n\njulia> b = U(1, 2)\n\njulia> c = imp(a, b)\nPbox: \t  ~  ( range=[1.0,2.0], mean=1.5, var=0.08333333333333333)\n\nSee also: env, makepbox\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.normal-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.normal","text":"normal(mean :: Interval, std :: Interval)\n\nNormal shaped pbox. Parameters can be Real or Intervals.\n\nConstructors\n\nnormal\nN\ngaussian\n\nExamples\n\njulia> a = normal(interval(0, 1), interval(1,2))\nPbox: \t  ~ normal ( range=[-6.1805, 7.1805], mean=[0.0, 1.0], var=[1.0, 4.0])\n\nSee also: uniform, lognormal, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.beta-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.beta","text":"beta(α :: Interval, β :: Interval)\n\nBeta shaped pbox. Parameters can be Real or Intervals.\n\nExamples\n\njulia> a = beta(2,interval(3,4))\nPbox: \t  ~ beta ( range=[0.0, 1.0], mean=[0.33333, 0.4], var=[0.031746, 0.04])\n\nSee also: KN, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.lognormal-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.lognormal","text":"lognormal(μ :: Interval, std :: Interval)\n\nLognormal shaped pbox. Parameters can be Real or Intervals.\n\nSee also: KN, meanMinMax\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.KN-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.KN","text":"KN(k :: Interval, n :: Interval)\n\nk out of N confidence box (c-box), a pbox shaped confidence structure. Quantifies inferential uncertainty in binomial counts,  where k successes were observed out of n trails. One sided or two sided confidence intervals may be drawn\n\nConstructors\n\nKN\nkn\n\nSee also: meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.cut-Tuple{Any,Real}","page":"API","title":"ProbabilityBoundsAnalysis.cut","text":"cut(x :: pbox, p :: Real)\n\nreturns a vertical cut of a pbox at cdf value p, for p ∈ [0, 1]\n\nConstructors\n\ncut(x :: pbox, p :: Real)\ncut(x :: pbox, p :: Interval)\n\nSee also: rand, cdf, mass\n\n\n\n\n\n","category":"method"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]\nModule = [\"ProbabilityBoundsAnalysis\"]","category":"page"},{"location":"pboxes/#Constructing-probability-boxes","page":"Constructing p-boxes","title":"Constructing probability boxes","text":"","category":"section"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"A probability distribution can be created by using it's shape and parameters:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> a = normal(0,1)\nPbox: \t  ~ normal ( range=[-3.090232,3.090232], mean=0.0, var=1.0)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"In ProbabilityBoundsAnalysis.jl probability distributions are p-boxes, but with equal bounds and precise moments.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"The IntervalArithmetic.jl package is used to create intervals:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> b = interval(0,1)\n[0, 1]","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"IntervalArithmetic.jl will work natively with ProbabilityBoundsAnalysis.jl, however an interval can be converted to a p-box in the following way:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> b = makepbox(interval(0,1))\nPbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"There are a number of ways that p-boxes can be created. For example they are the result of arithemtic between random variables with unknown dependence. They can also be defined by using a distributions shape but with interval parameters:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> c = normal(interval(0,1),1)\nPbox: \t  ~ normal ( range=[-3.09023,4.0902322], mean=[0.0,1.0], var=1.0)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"or by taking the envelope over a number of uncertain numbers:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> d = normal(-1,1); \njulia> e = normal(1, interval(1,2));\njulia> f = env(d,e)\nPbox: \t  ~ normal ( range=[-5.18046,7.1804646], mean=[-1.0,1.0], var=[1.0,4.0])","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"and may be plotted as follows:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"julia> plot(f)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"(Image: alt text)","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"In ProbabilityBoundsAnalysis.jl all plots of uncertain numbers are of their cdfs.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"Supported parametric distributions:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"|           |         |        |              |         |             | |:––––-:|:–––-:|:–––:|:––––––:|:–––-:|:–––––-:| |   normal  | uniform |  beta  |   betaPrime  | biweght |    Cauchy   | |    chi    |  chisq  | cosine | epanechnikov |  erlang | exponential | |   fDist   | frechet |  gamma |    ksdist    | laplace |     levy    | | lognormal |         |        |              |         |             |","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"Supported distribution free p-boxes:","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"|           |         |        |              |         | |:––––-:|:–––-:|:–––:|:––––––:|:–––-:| |   meanVar  | meanMin |  meanMax  |   meanMinMax  | minMaxMeanVar|","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"KN c-boxes also supported.","category":"page"},{"location":"pboxes/","page":"Constructing p-boxes","title":"Constructing p-boxes","text":"All constructors support interval arguments.","category":"page"},{"location":"theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"TODO","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"However Probability bounds analysis and probability boxes are comprehensive","category":"page"},{"location":"theory/#Bibliography","page":"Theory","title":"Bibliography","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"For probability bound analysis:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, S., V. Kreinovich, L. Ginzburg, K. Sentz and D.S. Myers. 2003. Constructing probability boxes and Dempster-Shafer structures. Sandia National Laboratories, SAND2002-4015, Albuquerque, New Mexico\nFerson, S., and J. Siegrist. 2012. Verified computation with probabilities. Pages 95-122 in Uncertainty Quantification in Scientific Computing, edited by A. Dienstfrey and R.F. Boisvert, Springer, New York\nBeer, M., S. Ferson, and V. Kreinovich. 2013. Imprecise probabilities in engineering analyses. Mechanical Systems and Signal Processing 37: 429\nFerson, S., D.R.J. Moore, P. van der Brink, T.L. Estes, K. Gallagher, R. O’Connor and F. Verdonck. 2010. Bounding uncertainty analyses. Application of Uncertainty Analysis to Ecological Risks of Pesticides","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"For interval statistics:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, Scott, et al. \"Experimental uncertainty estimation and statistics for data having interval uncertainty.\" Sandia National Laboratories, Report SAND2007-0939 162 (2007)","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"For dependency modelling:","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"Ferson, S., R. Nelsen, J. Hajagos, D. Berleant, J. Zhang, W.T. Tucker, L. Ginzburg and W.L. Oberkampf. 2004. Dependence in Probabilistic Modeling, Dempster-Shafer Theory, and Probability Bounds Analysis. Sandia National Laboratories, SAND2004-3072, Albuquerque, NM\nNelsen, Roger B. An introduction to copulas. Springer Science & Business Media, 2007","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"userguide/#User-Guide","page":"User guide","title":"User Guide","text":"","category":"section"},{"location":"arithmetic/#Arithmetic","page":"Arithmetic","title":"Arithmetic","text":"","category":"section"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Supported dependent arithmetic between uncertain numbers:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"|                           |     independent    | dependency known   | dependency unknown | perfect/opposite     | partial information  | |–––––––––––––-|:–––––––––:|––––––––––|––––––––––|–––––––––––|–––––––––––| | intervals                 | not known to exist |         solutions exist        |         yes        |  solutions exist |  solutions exist | | probability distributions |         yes        |         yes        |         yes        |          yes         |          yes        | | probability boxes         |         yes        |         yes        |         yes        |          yes         |          yes        |","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Most of the fundamental binary operations can be performed between uncertain numbers of all types:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> a = normal(-1,1); \njulia> b = interval(1,2);\njulia> a + b\nPbox: \t  ~  ( range=[-3.09023,4.090232], mean=[0.0,1.0], var=[1.0,1.25])\n\njulia> a - b\nPbox: \t  ~  ( range=[-6.090232,1.0902323], mean=[-3.0,-2.0], var=[1.0,1.25])\n\njulia> a * b\nPbox: \t  ~  ( range=[-4.090232,4.180464], mean=[-1.015451,-1.9690], var=[0.99763,3.99053])\n\njulia> a / b\nPbox: \t  ~  ( range=[-2.045116,2.0902323], mean=[-0.50772,-0.984548], var=[0.249408,0.99763])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"All of the above operations assume independence. For unknown dependence:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> convFrechet(a, b, op = +)\nPbox: \t  ~  ( range=[-3.09023,4.090232], mean=[0.0,1.0], var=[0.383917,2.1086384])\n\njulia> convFrechet(a, b, op = -)\nPbox: \t  ~  ( range=[-6.09023,1.090232], mean=[-3.0,-2.0], var=[0.383917,2.108638])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"The resulting p-boxes are much wider than the independence case.","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Perfect and opposite convolutions can also be performed:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> a = normal(0,1);\njulia> b = normal(1,1);\njulia> convPerfect(a, b, op = +)\nPbox: \t  ~  ( range=[-5.18046,7.18046], mean=[0.96909,1.030903], var=[3.80050,4.18248])\n\njulia> convOpposite(a, b, op = +)\nPbox: \t  ~  ( range=[0.48559,1.51440], mean=[0.96909,1.03090], var=[0.0,0.00840])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Binary operations with a specified correlation coefficient may also be performed:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> a = normal(0,1);\njulia> b = normal(1,1);\njulia> conv(a,b, op = +, corr = 0.5)\nPbox: \t  ~  ( range=[-5.18046,7.18046], mean=1.0, var=[2.57835,3.96457])","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"This assumes that a and b follow a Gaussian Copula. You may however perform the operation with any copula by using the function","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"julia> convCorr(a, b, C = C, op = +)","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"where C is a copula (see section on dependence modelling).","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"Note that:","category":"page"},{"location":"arithmetic/","page":"Arithmetic","title":"Arithmetic","text":"conv(a, b, op = op, corr = 0)               == convIndep(a, b, op = op)\nconv(a, b, op = op, corr = 1)               == convPerfect(a, b, op = op)\nconv(a, b, op = op, corr = -1)              == convOpposite(a, b, op = op)\nconv(a, b, op = op, corr = interval(-1,1))  == convFrechet(a, b, op = op)","category":"page"},{"location":"#ProbabilityBoundsAnalysis.jl","page":"Home","title":"ProbabilityBoundsAnalysis.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Probability bounds analysis in Julia, a package for performing arithmetic between uncertain numbers. ProbabilityBoundsAnalysis.jl computes guaranteed bounds on functions of random variables, given only partial information about their marginals and dependence. Considered to be a form of rigorous computing with random variables.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supported uncertain numbers: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"scalars\nprobability distributions\nintervals\nprobability boxes (p-boxes)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Ander Gray, Institute for Risk and Uncertainty, University of Liverpool\nScott Ferson, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"#Collaborators","page":"Home","title":"Collaborators","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Marco De Angelis, Institute for Risk and Uncertainty, University of Liverpool\nNick Gray, Institute for Risk and Uncertainty, University of Liverpool\nAlexander Wimbush, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Two ways to install and use:","category":"page"},{"location":"","page":"Home","title":"Home","text":"1. From the julia package manager","category":"page"},{"location":"","page":"Home","title":"Home","text":"You may download the lastest release by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add ProbabilityBoundsAnalysis\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"or the latest version by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add ProbabilityBoundsAnalysis#master\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"2. Downloading the source code","category":"page"},{"location":"","page":"Home","title":"Home","text":"git clone https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\n\njulia> include(\"ProbabilityBoundsAnalysis.jl/src/ProbabilityBoundsAnalysis.jl\")\njulia> using Main.ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#related-packages:","page":"Home","title":"related packages:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pba.py: Python version of this software.\npba.r: R version of this software.\nRAMAS® RiskCalc: a commerical software for distribution-free risk analysis.\nIntervalArithmetic.jl: the interval arithmetic package used in this software.\nValidatedNumerics.jl: a suite of julia packages for rigorous computations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Acknowledgements","page":"Home","title":"Acknowledgements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The authors would like to thank the gracious support from the EPSRC iCase studentship award 15220067. We also gratefully acknowledge funding from UKRI via the EPSRC and ESRC Centre for Doctoral Training in Risk and Uncertainty Quantification and Management in Complex Systems. This research is funded by the Engineering Physical Sciences Research Council (EPSRC) with grant no. EP/R006768/1, which is greatly acknowledged for its funding and support. This work has been carried out within the framework of the EUROfusion Consortium and has received funding from the Euratom research and training programme 2014-2018 and 2019-2020 under grant agreement No 633053. The views and opinions expressed herein do not necessarily reflect those of the European Commission.","category":"page"}]
}

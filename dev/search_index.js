var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"CurrentModule = ProbabilityBoundsAnalysis\nDocTestSetup = quote\n    using ProbabilityBoundsAnalysis\nend","category":"page"},{"location":"api/","page":"API","title":"API","text":"\npbox( x :: Array{Interval{T}, 1}, bounded = [true, true]) where T <: Real\npbox( x :: Array{T, 2}, bounded = [true, true]) where T <: Real\n\ncdf(s :: pbox, x :: Real)\ncdf(s :: pbox, x::Interval)\n\nmass(s :: pbox, lo :: Real, hi :: Real)\nmass(s :: pbox, x:: Interval)\n\nmakepbox(x...)\n\nmean(x::pbox)\n\nvar(x::pbox)\n\nstd(x::pbox)\n\nenv(x...)\n\nimp(x...)\n\nnormal(mean, std)\n\nuniform(min :: Interval, max :: Interval)\n\nbeta(α, β)\n\nlognormal(  μ, θ)\n\nKN(k, n)\n\ncut(x, p :: Real)\n\n","category":"page"},{"location":"api/#ProbabilityBoundsAnalysis.pbox-Union{Tuple{Array{Interval{T},1}}, Tuple{T}, Tuple{Array{Interval{T},1},Any}} where T<:Real","page":"API","title":"ProbabilityBoundsAnalysis.pbox","text":"pbox( x :: Array{Interval{T}, 1} ) where T <: Real\n\nConstructs a pbox from an array of intervals with equal mass. Left and right bounds are sorted to construct cdf bounds.\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.pbox-Union{Tuple{Array{T,2}}, Tuple{T}, Tuple{Array{T,2},Any}} where T<:Real","page":"API","title":"ProbabilityBoundsAnalysis.pbox","text":"pbox( x :: Array{T, 2} ) where T <: Real\n\nConstructs a pbox from a matrix of 2nd order samples [Nouter x Ninner]\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.cdf-Tuple{pbox,Real}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Real)\n\nReturns cdf value (interval) at x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#Distributions.cdf-Tuple{pbox,Interval}","page":"API","title":"Distributions.cdf","text":"cdf(s :: pbox, x :: Interval)\n\nReturns interval bounds on cdf value in interval x\n\nSee also: cut, mass, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox,Real,Real}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, lo :: Real, hi :: Real)\n\nReturns bounds on probability mass in interval [lo, hi]\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.mass-Tuple{pbox,Interval}","page":"API","title":"ProbabilityBoundsAnalysis.mass","text":"mass(s :: pbox, x:: Interval)\n\nReturns bounds on probability mass in interval x\n\nSee also: cut, cdf, rand\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.makepbox-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.makepbox","text":"makepbox(x...)\n\nReturns an array of pboxes from an array of inputs (eg an array of intervals or reals).\n\nExamples\n\njulia> s = makepbox(interval(0,1))\n Pbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])\n\njulia> ar = [interval(0, 1), interval(0, 2), 3];\njulia> s = makepbox.(ar)\n3-element Array{pbox,1}:\n Pbox: \t  ~  ( range=[0.0,1.0], mean=[0.0,1.0], var=[0.0,0.25])\n Pbox: \t  ~  ( range=[0.0,2.0], mean=[0.0,2.0], var=[0.0,1.0])\n Pbox: \t  ~  ( range=[-1.0,0.0], mean=[-1.0,0.0], var=[0.0,0.25])\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.mean-Tuple{pbox}","page":"API","title":"Statistics.mean","text":"mean( x :: pbox)\n\nGet interval mean of a pbox See also: var, std\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.var-Tuple{pbox}","page":"API","title":"Statistics.var","text":"var( x :: pbox)\n\nGet interval variance of a pbox See also: std, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#Statistics.std-Tuple{pbox}","page":"API","title":"Statistics.std","text":"std( x :: pbox)\n\nGet interval std of a pbox See also: var, mean\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.env-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.env","text":"env(x :: pbox, y :: pbox, ...)\n\nEnvelope. Returns the union of pboxes. Any number of pboxes may be input\n\nExamples\n\njulia> a = U(0,1)\n\njulia> b = U(1,2)\n\njulia> c = env(a, b)\nPbox: \t  ~ uniform ( range=[0.0,2.0], mean=[0.5,1.5], var=0.08333333333333333)\n\nSee also: imp, makepbox\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.imp-Tuple","page":"API","title":"ProbabilityBoundsAnalysis.imp","text":"imp(x :: pbox, y :: pbox)\n\nImprint. Returns the intersection of pboxes. Any number of pboxes may be input\n\nExamples\n\njulia> a = U(interval(0, 1), 2)\n\njulia> b = U(1, 2)\n\njulia> c = imp(a, b)\nPbox: \t  ~  ( range=[1.0,2.0], mean=1.5, var=0.08333333333333333)\n\nSee also: env, makepbox\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.normal-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.normal","text":"normal(mean :: Interval, std :: Interval)\n\nNormal shaped pbox. Parameters can be Real or Intervals.\n\nConstructors\n\nnormal\nN\ngaussian\n\nExamples\n\njulia> a = normal(interval(0, 1), interval(1,2))\nPbox: \t  ~ normal ( range=[-6.1805, 7.1805], mean=[0.0, 1.0], var=[1.0, 4.0])\n\nSee also: uniform, lognormal, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.beta-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.beta","text":"beta(α :: Interval, β :: Interval)\n\nBeta shaped pbox. Parameters can be Real or Intervals.\n\nExamples\n\njulia> a = beta(2,interval(3,4))\nPbox: \t  ~ beta ( range=[0.0, 1.0], mean=[0.33333, 0.4], var=[0.031746, 0.04])\n\nSee also: KN, meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.lognormal-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.lognormal","text":"lognormal(μ :: Interval, std :: Interval)\n\nLognormal shaped pbox. Parameters can be Real or Intervals.\n\nSee also: KN, meanMinMax\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.KN-Tuple{Any,Any}","page":"API","title":"ProbabilityBoundsAnalysis.KN","text":"KN(k :: Interval, n :: Interval)\n\nk out of N confidence box (c-box), a pbox shaped confidence structure. Quantifies inferential uncertainty in binomial counts,  where k successes were observed out of n trails. One sided or two sided confidence intervals may be drawn\n\nConstructors\n\nKN\nkn\n\nSee also: meanMinMax, plot\n\n\n\n\n\n","category":"method"},{"location":"api/#ProbabilityBoundsAnalysis.cut-Tuple{Any,Real}","page":"API","title":"ProbabilityBoundsAnalysis.cut","text":"cut(x :: pbox, p :: Real)\n\nreturns a vertical cut of a pbox at cdf value p, for p ∈ [0, 1]\n\nConstructors\n\ncut(x :: pbox, p :: Real)\ncut(x :: pbox, p :: Interval)\n\nSee also: rand, cdf, mass\n\n\n\n\n\n","category":"method"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Pages = [\"api.md\"]\nModule = [\"ProbabilityBoundsAnalysis\"]","category":"page"},{"location":"theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"userguide/#User-Guide","page":"User guide","title":"User Guide","text":"","category":"section"},{"location":"#ProbabilityBoundsAnalysis.jl","page":"Home","title":"ProbabilityBoundsAnalysis.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Probability bounds analysis in Julia, a package for performing arithmetic between uncertain numbers. ProbabilityBoundsAnalysis.jl computes guaranteed bounds on functions of random variables, given only partial information about their marginals and dependence. Considered to be a form of rigorous computing with random variables.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supported uncertain numbers: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"scalars\nprobability distributions\nintervals\nprobability boxes (p-boxes)","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Authors","page":"Home","title":"Authors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Ander Gray, Institute for Risk and Uncertainty, University of Liverpool\nScott Ferson, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"#Collaborators","page":"Home","title":"Collaborators","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Marco De Angelis, Institute for Risk and Uncertainty, University of Liverpool\nNick Gray, Institute for Risk and Uncertainty, University of Liverpool\nAlexander Wimbush, Institute for Risk and Uncertainty, University of Liverpool","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Two ways to install and use:","category":"page"},{"location":"","page":"Home","title":"Home","text":"1. From the julia package manager","category":"page"},{"location":"","page":"Home","title":"Home","text":"You may download the lastest release by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add ProbabilityBoundsAnalysis\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"or the lastest version of this repository by:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ]\n(v1.0) pkg> add https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\njulia> using ProbabilityBoundsAnalysis","category":"page"},{"location":"","page":"Home","title":"Home","text":"2. Downloading the source code","category":"page"},{"location":"","page":"Home","title":"Home","text":"git clone https://github.com/AnderGray/ProbabilityBoundsAnalysis.jl.git\n\njulia> include(\"ProbabilityBoundsAnalysis.jl/src/ProbabilityBoundsAnalysis.jl\")\njulia> using Main.ProbabilityBoundsAnalysis","category":"page"},{"location":"#related-packages:","page":"Home","title":"related packages:","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"pba.py: Python version of this software.\npba.r: R version of this software.\nRAMAS® RiskCalc: a commerical software for distribution-free risk analysis.\nIntervalArithmetic.jl: the interval arithmetic package used in this software.\nValidatedNumerics.jl: a suite of julia packages for rigorous computations.","category":"page"}]
}
